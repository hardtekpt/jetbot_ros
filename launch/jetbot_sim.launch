<launch>

  <arg name="name" default="jetbot"/>
  <arg name="ID" default="0"/>

  <arg name="sensor_id" default="0" />                       
  <arg name="cam_name" default="csi_cam_$(arg sensor_id)" />

  <arg name="model" default="$(find jetbot_ros)/urdf/jetbot.urdf.xacro"/>
  <arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz"/>

  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>

  <group ns="/$(arg name)$(arg ID)">

    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="/$(arg name)$(arg ID)/robot_description" command="$(find xacro)/xacro $(arg model) model_name:=$(arg name)$(arg ID)"/>
    <param name="/$(arg name)$(arg ID)/tf_prefix" value="$(arg name)$(arg ID)" />

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args=" -unpause -urdf -model $(arg name)$(arg ID) -param robot_description -robot_namespace $(arg name)$(arg ID) -x $(arg x) -y $(arg y) -z $(arg z)">  
    </node>


    <!-- Load joint controller configuration from YAML file to parameter server -->
    <rosparam file="$(find jetbot_ros)/config/joint_states.yaml" command="load" ns="/$(arg name)$(arg ID)"/>
    <rosparam file="$(find jetbot_ros)/config/diff_drive.yaml" command="load" ns="/$(arg name)$(arg ID)"/>

    <param name="/$(arg name)$(arg ID)/diff_drive_controller/base_frame_id" value="/$(arg name)$(arg ID)/chassis" />
    <param name="/$(arg name)$(arg ID)/diff_drive_controller/odom_frame_id" value="/$(arg name)$(arg ID)/odom" />

    <!-- load the controllers -->
    <node name="robot_spawner" pkg="controller_manager" type="spawner"
      respawn="true" output="screen"
      args="--namespace=/$(arg name)$(arg ID)
            /$(arg name)$(arg ID)/joint_state_controller
            /$(arg name)$(arg ID)/diff_drive_controller"/>


    <!-- convert joint states to TF transforms for rviz, etc -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
    </node>

  </group>

</launch>
